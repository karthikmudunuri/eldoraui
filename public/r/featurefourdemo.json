{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "featurefourdemo",
  "type": "registry:example",
  "title": "featurefourdemo",
  "description": "Second example showing a lens effect component",
  "registryDependencies": [
    "https://eldoraui.site/r/featurefour"
  ],
  "files": [
    {
      "path": "registry/demos/featurefour-demo.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { TextComponent } from \"@/components/eldoraui/featurefour\";\nimport { cn } from \"@/lib/utils\";\n\nconst data = [\n  {\n    title: \"Visit the Eldoraui website\",\n    content:\n      \"Visit the Eldoraui and browse through the dozens of available components to help you build your web or mobile application.\",\n    srcImage:\n      \"https://res.cloudinary.com/eldoraui/image/upload/v1734107781/Screenshot_2024-12-13_at_10.06.08_PM_molet1.png\",\n  },\n  {\n    title: \"Browse the site and choose your component\",\n    content:\n      \"Browse the categories, the variants of each component, try them out, and integrate them into your project with just a few clicks.\",\n    srcImage:\n      \"https://res.cloudinary.com/eldoraui/image/upload/v1734107781/Screenshot_2024-12-13_at_10.06.08_PM_molet1.png\",\n  },\n  {\n    title: \"Set up your environment\",\n    content:\n      \"Set up your development environment to integrate Cuicui library components. You can customize them infinitely to match your branding guidelines.\",\n    srcImage:\n      \"https://res.cloudinary.com/eldoraui/image/upload/v1734107781/Screenshot_2024-12-13_at_10.06.08_PM_molet1.png\",\n  },\n  {\n    title: \"Copy and paste the code\",\n    content:\n      \"Copy and paste the code generated by the Cuicui library into your project and enjoy modern, ready-to-use components.\",\n    srcImage:\n      \"https://res.cloudinary.com/eldoraui/image/upload/v1734107781/Screenshot_2024-12-13_at_10.06.08_PM_molet1.png\",\n  },\n];\n\nexport default function FeatureFourImages() {\n  const [featureOpen, setFeatureOpen] = useState<number>(0);\n  const [timer, setTimer] = useState<number>(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer((prev) => prev + 10);\n    }, 10);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (timer > 10000) {\n      setFeatureOpen((prev) => (prev + 1) % data.length);\n      setTimer(0);\n    }\n  }, [timer]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"mb-20 text-center\">\n        <p className=\" mb-2 text-sm font-medium uppercase text-neutral-500\">\n          How does it work ?\n        </p>\n\n        <h2 className=\"mb-4 text-3xl font-semibold tracking-tighter text-neutral-800 dark:text-neutral-300\">\n          How to use the Easiest component librairy : EldoraUI\n        </h2>\n      </div>\n      <div className=\" grid grid-cols-1 gap-4 md:grid-cols-2\">\n        <div className=\"space-y-6 \">\n          {data.map((item, index) => (\n            <button\n              className=\"w-full\"\n              key={item.title}\n              onClick={() => {\n                setFeatureOpen(index);\n                setTimer(0);\n              }}\n              type=\"button\"\n            >\n              <TextComponent\n                content={item.content}\n                isOpen={featureOpen === index}\n                loadingWidthPercent={featureOpen === index ? timer / 100 : 0}\n                number={index + 1}\n                title={item.title}\n              />\n            </button>\n          ))}\n        </div>\n        <div className=\"h-full\">\n          <div\n            className={cn(\n              \"relative h-96 w-full overflow-hidden rounded-lg md:h-[500px]\",\n            )}\n          >\n            {data.map((item, index) => (\n              <img\n                alt={item.title}\n                className={cn(\n                  \"absolute h-[500px] w-full transform-gpu rounded-lg object-cover transition-all duration-300\",\n                  featureOpen === index ? \"scale-100\" : \"scale-70\",\n                  featureOpen > index ? \"translate-y-full\" : \"\",\n                )}\n                key={item.title}\n                src={item.srcImage}\n                style={{ zIndex: data.length - index }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/featurefour-demo.tsx"
    }
  ]
}