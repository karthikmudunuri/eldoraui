{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonalslider",
  "type": "registry:ui",
  "title": "testimonalslider",
  "description": "An interactive 3D tag cloud component",
  "dependencies": [],
  "files": [
    {
      "path": "registry/eldoraui/testimonalslider.tsx",
      "content": "\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport Image from \"next/image\";\nimport { Transition } from \"@headlessui/react\";\n\ninterface Testimonial {\n  img: string;\n  quote: string;\n  name: string;\n  role: string;\n}\n\nexport default function FancyTestimonialsSlider({\n  testimonials,\n}: {\n  testimonials: Testimonial[];\n}) {\n  const testimonialsRef = useRef<HTMLDivElement>(null);\n  const [active, setActive] = useState<number>(0);\n  const [autorotate, setAutorotate] = useState<boolean>(true);\n  const autorotateTiming: number = 7000;\n\n  useEffect(() => {\n    if (!autorotate) return;\n    const interval = setInterval(() => {\n      setActive(\n        active + 1 === testimonials.length ? 0 : (active) => active + 1,\n      );\n    }, autorotateTiming);\n    return () => clearInterval(interval);\n  }, [active, autorotate]);\n\n  const heightFix = () => {\n    if (testimonialsRef.current && testimonialsRef.current.parentElement)\n      testimonialsRef.current.parentElement.style.height = `${testimonialsRef.current.clientHeight}px`;\n  };\n\n  useEffect(() => {\n    heightFix();\n  }, []);\n\n  return (\n    <div className=\"mx-auto w-full max-w-3xl text-center\">\n      {/* Testimonial image */}\n      <div className=\"relative h-32\">\n        <div className=\"pointer-events-none absolute left-1/2 top-0 h-[480px] w-[480px] -translate-x-1/2 before:absolute before:inset-0 before:-z-10 before:rounded-full before:bg-gradient-to-b before:from-fuchsia-500/25 before:via-fuchsia-500/5 before:via-25% before:to-fuchsia-500/0 before:to-75%\">\n          <div className=\"h-32 [mask-image:_linear-gradient(0deg,transparent,theme(colors.white)_20%,theme(colors.white))]\">\n            {testimonials.map((testimonial, index) => (\n              <Transition\n                as=\"div\"\n                key={index}\n                show={active === index}\n                className=\"absolute inset-0 -z-10 h-full\"\n                enter=\"transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700 order-first\"\n                enterFrom=\"opacity-0 -rotate-[60deg]\"\n                enterTo=\"opacity-100 rotate-0\"\n                leave=\"transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700\"\n                leaveFrom=\"opacity-100 rotate-0\"\n                leaveTo=\"opacity-0 rotate-[60deg]\"\n                beforeEnter={() => heightFix()}\n              >\n                <Image\n                  className=\"relative left-1/2 top-11 -translate-x-1/2 rounded-full\"\n                  src={testimonial.img}\n                  width={56}\n                  height={56}\n                  alt={testimonial.name}\n                />\n              </Transition>\n            ))}\n          </div>\n        </div>\n      </div>\n      {/* Text */}\n      <div className=\"mb-9 transition-all delay-300 duration-150 ease-in-out\">\n        <div className=\"relative flex flex-col\" ref={testimonialsRef}>\n          {testimonials.map((testimonial, index) => (\n            <Transition\n              key={index}\n              show={active === index}\n              enter=\"transition ease-in-out duration-500 delay-200 order-first\"\n              enterFrom=\"opacity-0 -translate-x-4\"\n              enterTo=\"opacity-100 translate-x-0\"\n              leave=\"transition ease-out duration-300 delay-300 absolute\"\n              leaveFrom=\"opacity-100 translate-x-0\"\n              leaveTo=\"opacity-0 translate-x-4\"\n              beforeEnter={() => heightFix()}\n            >\n              <div className=\"text-2xl font-bold text-fuchsia-900 before:content-['\\201C'] after:content-['\\201D']\">\n                {testimonial.quote}\n              </div>\n            </Transition>\n          ))}\n        </div>\n      </div>\n      {/* Buttons */}\n      <div className=\"-m-1.5 flex flex-wrap justify-center\">\n        {testimonials.map((testimonial, index) => (\n          <button\n            key={index}\n            className={`m-1.5 inline-flex justify-center whitespace-nowrap rounded-full px-3 py-1.5 text-xs shadow-sm transition-colors duration-150 focus-visible:outline-none focus-visible:ring focus-visible:ring-fuchsia-300 dark:focus-visible:ring-fuchsia-600 ${active === index ? \"bg-fuchsia-500 text-white shadow-fuchsia-950/10\" : \"bg-white text-fuchsia-900 hover:bg-fuchsia-100\"}`}\n            onClick={() => {\n              setActive(index);\n              setAutorotate(false);\n            }}\n          >\n            <span>{testimonial.name}</span>{\" \"}\n            <span\n              className={`${active === index ? \"text-fuchsia-200\" : \"text-fuchsia-300\"}`}\n            >\n              -\n            </span>{\" \"}\n            <span>{testimonial.role}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/eldoraui/testimonalslider.tsx"
    }
  ]
}