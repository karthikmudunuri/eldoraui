{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animatedborderbutton",
  "type": "registry:ui",
  "title": "animatedborderbuttont",
  "description": "The Spinning Text component animates text in a circular motion with customizable speed, direction, color, and transitions for dynamic and engaging effects.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/eldoraui/animatedborderbutton.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface ButtonAnimatedBorderProps {\n  text?: string;\n  className?: string;\n}\n\nexport function ButtonAnimatedBorder({\n  text = \"Button\",\n  className,\n}: ButtonAnimatedBorderProps) {\n  return (\n    <button\n      className={cn(\n        \"group relative grid overflow-hidden rounded px-10 py-4 shadow-[0_1000px_0_0_hsl(0_0%_20%)_inset] transition-colors duration-200\",\n        className,\n      )}\n    >\n      <span>\n        <span className=\"spark mask-gradient animate-flip before:animate-rotate absolute inset-0 h-[100%] w-[100%] overflow-hidden rounded [mask:linear-gradient(white,_transparent_50%)] before:absolute before:aspect-square before:w-[200%] before:rotate-[-90deg] before:bg-[conic-gradient(from_0deg,transparent_0_340deg,white_360deg)] before:content-[''] before:[inset:0_auto_auto_50%] before:[translate:-50%_-15%]\" />\n      </span>\n      <span className=\"backdrop absolute inset-px rounded bg-neutral-950 transition-colors duration-200 group-hover:bg-neutral-900\" />\n      <span className=\"z-10 text-sm font-medium text-neutral-400\">{text}</span>\n    </button>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/eldoraui/animatedborderbutton.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "animation": {
            "flip": "flip 6s infinite steps(2, end)",
            "rotate": "rotate 3s linear infinite both"
          },
          "keyframes": {
            "flip": {
              "to": {
                "transform": "rotate(360deg)"
              }
            },
            "rotate": {
              "to": {
                "transform": "rotate(90deg)"
              }
            }
          }
        }
      }
    }
  }
}